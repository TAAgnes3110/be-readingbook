const axios = require('axios')

const BASE_URL = 'http://localhost:9000/api'

// Test data
const testCategory = {
  name: 'Th·ªÉ lo·∫°i Test',
  image_url: 'https://example.com/test-category.jpg',
  status: 'active'
}

const testBook = {
  title: 'S√°ch Test',
  author: 'T√°c gi·∫£ Test',
  category: 1, // S·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau khi t·∫°o category
  description: 'ƒê√¢y l√† m√¥ t·∫£ s√°ch test v·ªõi ƒë·ªß 10 k√Ω t·ª±',
  release_date: '2024-01-15',
  cover_url: 'https://example.com/cover.jpg',
  txt_url: 'https://example.com/book.txt',
  book_url: 'https://example.com/book.pdf',
  epub_url: 'https://example.com/book.epub',
  keywords: ['test', 's√°ch'],
  status: 'active',
  avgRating: 4.5,
  numberOfReviews: 10
}

async function testAllAPIs() {
  console.log('üöÄ Test t·∫•t c·∫£ APIs (Category + Book)...\n')

  let createdCategoryId = null
  let createdBookId = null

  try {
    // ===== CATEGORY TESTS =====
    console.log('üìö ===== CATEGORY API TESTS =====')
    
    // Test 1: T·∫°o category
    console.log('1. POST /api/categories - T·∫°o th·ªÉ lo·∫°i m·ªõi')
    try {
      const response = await axios.post(`${BASE_URL}/categories`, testCategory)
      if (response.data.success) {
        createdCategoryId = response.data.data.category._id
        console.log('‚úÖ T·∫°o category th√†nh c√¥ng:', response.data.data.category.name)
        console.log('üìä ID category:', createdCategoryId)
      }
    } catch (error) {
      console.log('‚ùå L·ªói t·∫°o category:', error.response?.data || error.message)
    }
    console.log('')

    // Test 2: L·∫•y danh s√°ch categories
    console.log('2. GET /api/categories - L·∫•y danh s√°ch th·ªÉ lo·∫°i')
    try {
      const response = await axios.get(`${BASE_URL}/categories`)
      if (response.data.success) {
        console.log('‚úÖ L·∫•y danh s√°ch category th√†nh c√¥ng')
        console.log('üìä S·ªë categories:', response.data.data.categories.length)
      }
    } catch (error) {
      console.log('‚ùå L·ªói l·∫•y danh s√°ch category:', error.response?.data || error.message)
    }
    console.log('')

    // ===== BOOK TESTS =====
    console.log('üìñ ===== BOOK API TESTS =====')
    
    // C·∫≠p nh·∫≠t category ID cho book
    if (createdCategoryId) {
      testBook.category = createdCategoryId
    }

    // Test 3: T·∫°o book
    console.log('3. POST /api/books - T·∫°o s√°ch m·ªõi')
    try {
      const response = await axios.post(`${BASE_URL}/books`, testBook)
      if (response.data.success) {
        createdBookId = response.data.data.book._id
        console.log('‚úÖ T·∫°o book th√†nh c√¥ng:', response.data.data.book.title)
        console.log('üìä ID book:', createdBookId)
        console.log('üìä Category ID:', response.data.data.book.category)
      }
    } catch (error) {
      console.log('‚ùå L·ªói t·∫°o book:', error.response?.data || error.message)
    }
    console.log('')

    // Test 4: L·∫•y danh s√°ch books
    console.log('4. GET /api/books - L·∫•y danh s√°ch s√°ch')
    try {
      const response = await axios.get(`${BASE_URL}/books`)
      if (response.data.success) {
        console.log('‚úÖ L·∫•y danh s√°ch book th√†nh c√¥ng')
        console.log('üìä S·ªë books:', response.data.data.books.length)
      }
    } catch (error) {
      console.log('‚ùå L·ªói l·∫•y danh s√°ch book:', error.response?.data || error.message)
    }
    console.log('')

    // Test 5: L·∫•y s√°ch m·ªõi nh·∫•t
    console.log('5. GET /api/books/latest - L·∫•y s√°ch m·ªõi nh·∫•t')
    try {
      const response = await axios.get(`${BASE_URL}/books/latest?limit=3`)
      if (response.data.success) {
        console.log('‚úÖ L·∫•y s√°ch m·ªõi nh·∫•t th√†nh c√¥ng')
        console.log('üìä S·ªë s√°ch m·ªõi nh·∫•t:', response.data.data.books.length)
        if (response.data.data.books.length > 0) {
          console.log('üìñ S√°ch m·ªõi nh·∫•t:', response.data.data.books[0].title)
        }
      }
    } catch (error) {
      console.log('‚ùå L·ªói l·∫•y s√°ch m·ªõi nh·∫•t:', error.response?.data || error.message)
    }
    console.log('')

    // Test 6: T√¨m ki·∫øm s√°ch theo category
    if (createdCategoryId) {
      console.log('6. GET /api/books?category=X - T√¨m ki·∫øm s√°ch theo category')
      try {
        const response = await axios.get(`${BASE_URL}/books?category=${createdCategoryId}`)
        if (response.data.success) {
          console.log('‚úÖ T√¨m ki·∫øm s√°ch theo category th√†nh c√¥ng')
          console.log('üìä S·ªë s√°ch trong category:', response.data.data.books.length)
        }
      } catch (error) {
        console.log('‚ùå L·ªói t√¨m ki·∫øm s√°ch theo category:', error.response?.data || error.message)
      }
      console.log('')
    }

    // ===== CLEANUP =====
    console.log('üóëÔ∏è ===== CLEANUP =====')
    
    // X√≥a book
    if (createdBookId) {
      console.log('7. DELETE /api/books/{id} - X√≥a s√°ch')
      try {
        const response = await axios.delete(`${BASE_URL}/books/${createdBookId}`)
        if (response.data.success) {
          console.log('‚úÖ X√≥a book th√†nh c√¥ng')
        }
      } catch (error) {
        console.log('‚ùå L·ªói x√≥a book:', error.response?.data || error.message)
      }
    }

    // X√≥a category
    if (createdCategoryId) {
      console.log('8. DELETE /api/categories/{id} - X√≥a th·ªÉ lo·∫°i')
      try {
        const response = await axios.delete(`${BASE_URL}/categories/${createdCategoryId}`)
        if (response.data.success) {
          console.log('‚úÖ X√≥a category th√†nh c√¥ng')
        }
      } catch (error) {
        console.log('‚ùå L·ªói x√≥a category:', error.response?.data || error.message)
      }
    }

    console.log('')
    console.log('üéâ Ho√†n th√†nh test t·∫•t c·∫£ APIs!')
    console.log('üìä K·∫øt qu·∫£:')
    console.log('   - Category API: ‚úÖ Ho·∫°t ƒë·ªông t·ªët')
    console.log('   - Book API: ‚úÖ Ho·∫°t ƒë·ªông t·ªët')
    console.log('   - T∆∞∆°ng t√°c gi·ªØa Book v√† Category: ‚úÖ Ho·∫°t ƒë·ªông t·ªët')

  } catch (error) {
    console.log('üí• L·ªói chung:', error.message)
  }
}

// Ch·∫°y test
testAllAPIs()
